version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    depends_on:
      - mongo
      - mongo-express
    restart: unless-stopped
    networks:
      - app-mongo-network
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`arena-api.fabienhp.com`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
      - "traefik.http.services.app.loadbalancer.server.port=3000"

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - app-mongo-network
      - mongo-express-mongo-network

  mongo-express:
    image: mongo-express:latest
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=secure_admin
      - ME_CONFIG_BASICAUTH_PASSWORD=secure_password
      - ME_CONFIG_SITE_BASEURL=/mongo-express
      - ME_CONFIG_SITE_HOST=localhost
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - mongo-express-mongo-network
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.rule=Host(`mongo-express.fabienhp.com`)"
      - "traefik.http.routers.mongo-express.service=mongo-express"
      - "traefik.http.routers.mongo-express.middlewares=traefik-auth"
      - "traefik.http.routers.mongo-express.entrypoints=websecure"
      - "traefik.http.routers.mongo-express.tls.certresolver=myresolver"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"

volumes:
  mongo-data:

networks:
  traefik-proxy:
    external: true
  app-mongo-network:
    driver: bridge
  mongo-express-mongo-network:
    driver: bridge
